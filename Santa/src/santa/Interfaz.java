/*
    Autores 
    Emmanuel Gómez Trujillo
    Cristian González Hernández
    Aníbal Uriel Guijarro Rocha
    Mario Alessandro López García
    Martín Raygoza De León
    Alejandro Becerra Ramirez 
 */
package santa;
import javax.swing.ImageIcon;


import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import santa.Interfaz_Duende;
import santa.Interfaz_Reno;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.*;
public class Interfaz extends javax.swing.JFrame {

    public Interfaz_Duende InterfazDuende = new Interfaz_Duende();
    public Interfaz_Reno InterfazReno = new Interfaz_Reno();
    private Timer time = new Timer();
    
    private int renos;
    private int duendes;
    
      ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
    /**
     * Creación de una nueva interfaz 
     */
    public Interfaz() throws InterruptedException {
        initComponents();
        InterfazReno.setVisible(true);
        InterfazDuende.setVisible(true);
        InterfazReno.setPrincipal(this);
        InterfazDuende.setPrincipal(this);
        //Ayudar();
        
        
    }

    /*
    Método para ayudar a los duendes a hacer los regalos 
    */
    public void Ayudar(){
        ImageIcon imageicon = new ImageIcon("src/imagenes/SantaAyudando.jfif");
        Image image = imageicon.getImage();
        Image newImage = image.getScaledInstance(650, 500, 500);
        SantaMimido.setIcon(new ImageIcon(newImage)); 
//        SantaMimido.setIcon(new ImageIcon("src/imagenes/SantaAyudando.jfif")); 
        //SantaMimido.
    }
    
    /*
    Método para repartir los regalos 
    */
    public void Repartir(){
       SantaMimido.setIcon(new ImageIcon("src/imagenes/SantaRepartiendo.jpg")); 
    }
    
    /*
    Método para mandar a dormir a Santa 
    */
    public void Dormir(){
       SantaMimido.setIcon(new ImageIcon("src/imagenes/Santa.jpg")); 
    }
   
    
    /*
    Método para hacer el conteo de los renos 
    */
    public void sumarRenos(){
        this.renos++;
        if(this.renos >= 8){
            this.InterfazReno.resetRenos();
//            try {
                renos =0;
                Runnable task = new Runnable() {
            public void run() {
                // Aquí va el código de la acción que quieres realizar
                Repartir();
            }
        };
        
        ScheduledFuture<?> future = executor.scheduleAtFixedRate(task, 0, 1, TimeUnit.SECONDS);
        executor.schedule(new Runnable() {
            public void run() {
                Dormir();
                future.cancel(true);
            }
        }, 5, TimeUnit.SECONDS);
//            } 
//            catch (InterruptedException ex) {
//                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }
    
    /*
    Método para hacer el conteo de los duendes 
    */
    public void sumarDuendes(){
        this.duendes ++;
        if(this.duendes >= 3){
            this.InterfazDuende.resetDuendes();
//            try {
                duendes =0;
                Runnable task = new Runnable() {
            public void run() {
                // Aquí va el código de la acción que quieres realizar
                Ayudar();
            }
        };
        
        ScheduledFuture<?> future = executor.scheduleAtFixedRate(task, 0, 1, TimeUnit.SECONDS);
        executor.schedule(new Runnable() {
            public void run() {
                Dormir();
                future.cancel(true);
            }
        }, 5, TimeUnit.SECONDS);
//            } 
//            catch (InterruptedException ex) {
//                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelImagen = new javax.swing.JPanel();
        SantaMimido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SantaMimido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Santa.jpg"))); // NOI18N
        SantaMimido.setText("jLabel1");

        javax.swing.GroupLayout PanelImagenLayout = new javax.swing.GroupLayout(PanelImagen);
        PanelImagen.setLayout(PanelImagenLayout);
        PanelImagenLayout.setHorizontalGroup(
            PanelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SantaMimido, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelImagenLayout.setVerticalGroup(
            PanelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SantaMimido, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Interfaz().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelImagen;
    private javax.swing.JLabel SantaMimido;
    // End of variables declaration//GEN-END:variables
}
